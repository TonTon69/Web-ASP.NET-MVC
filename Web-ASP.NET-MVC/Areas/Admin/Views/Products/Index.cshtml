@using Web_ASP.NET_MVC.Models
@using PagedList.Mvc;
@model PagedList.PagedList<Web_ASP.NET_MVC.Models.Product>

@*Thuộc tính mô tả nội dung quá dài, do đó sẽ sử dụng một Helper HTML tùy chỉnh cho phép dễ dàng cắt những thuộc tính này với độ dài phù hợp.*@
@helper Truncate(string input, int length)
{
    if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Quản Lý Thông Tin Sản Phẩm</h2>
<div class="d-flex">
    <p class="mr-4">
        <i class="fas fa-plus"></i>
        @Html.ActionLink("Thêm mới", "Create")
    </p>
    <p>
        <i class="fas fa-file-excel"></i>
        @Html.ActionLink("Xuất Excel", "ExportContentToExcel")
    </p>
</div>
<table class="table">
    <tr>
        <th>ID</th>
        <th>Tên</th>
        <th>Giá</th>
        <th>Giá khuyến mãi</th>
        <th>Mô tả</th>
        <th>SL Tồn</th>
        <th>Thể loại</th>
        <th>Ảnh</th>
        <th>Được tạo ngày</th>
        <th>Được tạo bởi</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td style="width: 120px">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @String.Format("{0:0,0}", item.Price) VNĐ
            </td>
            <td>
                @String.Format("{0:0,0}", item.PromotionPrice) VNĐ
            </td>
            <td style="width: 250px">
                @Truncate(item.ProductDescription, 100)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quanlity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCetegory.Name)
            </td>
            <td>
                @Truncate(item.Image, 10)
            </td>
            <td style="width: 120px">
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td style="width: 120px">
                @Html.DisplayFor(modelItem => item.CreateBy)
            </td>
            <td>
                @Html.ActionLink("Sửa", "Edit", new { id = item.ProductCode }, new { @class = "btn btn-primary mb-1" })
                @Html.ActionLink("Chi tiết", "Details", new { id = item.ProductCode }, new { @class = "btn btn-secondary mb-1" })
                @Html.ActionLink("Xóa", "Delete", new { id = item.ProductCode }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>

<style>
    .pagination li {
        padding: 6px 12px;
        border: 1px solid rgba(0,0,0,0.1);
    }
</style>


<div class="col-md-12">
    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount :
    <div class="pagination d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))
    </div>
</div>
