@using Web_ASP.NET_MVC.Models
@using PagedList.Mvc;
@model PagedList.PagedList<Web_ASP.NET_MVC.Models.Product>

@helper Truncate(string input, int length)
{
    if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Danh Mục Sản Phẩm</h2>
<div class="d-flex mb-4">
    @using (Html.BeginForm("Index", "Products", FormMethod.Get, new { @class = "d-none d-sm-inline-block form-inline my-2 my-md-0 mw-100 navbar-search" }))
    {
        <div class="input-group">
            <input type="text" name="search" value="@ViewBag.CurrentFilter" class="form-control border-0 small" placeholder="Tìm kiếm...">
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">
                    <i class="fas fa-search fa-sm"></i>
                </button>
            </div>
        </div>
    }
    <div class="d-flex">
        <a href="@Url.Action("Create","Products")" class="btn btn-primary ml-4">
            <i class="fas fa-plus"></i>
            Thêm mới sản phẩm
        </a>
        <a href="@Url.Action("ExportContentToExcel","Products")" class="btn btn-success ml-2">
            <i class="fas fa-file-excel"></i>
            Xuất excel
        </a>
    </div>
</div>
<span>Tất cả (@ViewBag.message)</span>
<table class="table">
    <tr>
        <th>ID</th>
        <th>Tên</th>
        <th>Giá gốc</th>
        <th>Giá KM</th>
        <th style="width: 250px">Mô tả</th>
        <th>SL Tồn</th>
        <th>Thể loại</th>
        <th>Ảnh chính</th>
        <th>Ngày tạo</th>
        <th>Được tạo bởi</th>
        <th style="width: 162px"></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td style="width: 120px">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @String.Format("{0:0,0}", item.Price) VNĐ
            </td>
            <td>
                @String.Format("{0:0,0}", item.PromotionPrice) VNĐ
            </td>
            <td>
                @Truncate(item.ProductDescription, 100)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quanlity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCetegory.Name)
            </td>
            <td>
                <img src="@Url.Content(item.Image)" height="50" width="50" />
            </td>
            <td style="width: 120px">
                @String.Format("{0:dd/MM/yyyy}", item.CreatedDate)
            </td>
            <td style="width: 120px">
                @Html.DisplayFor(modelItem => item.CreateBy)
            </td>
            <td>
                <a href="@Url.Action("Edit","Products",new { id = item.ProductCode })" class="btn btn-primary">
                    <i class="far fa-edit"></i>
                </a>
                <a href="@Url.Action("Details","Products",new { id = item.ProductCode })" class="btn btn-secondary">
                    <i class="far fa-eye"></i>
                </a>
                <a href="@Url.Action("Delete","Products",new { id = item.ProductCode })" class="btn btn-danger">
                    <i class="far fa-trash-alt"></i>
                </a>
            </td>
        </tr>
    }

</table>

<style>
    .pagination li {
        border: 1px solid rgba(0,0,0,0.1);
        border-radius: 5px;
        margin-right: 5px;
        cursor: pointer;
    }

    .pagination .PagedList-skipToNext, .pagination .PagedList-skipToPrevious {
        font-size: 14px;
        border: none;
    }

    .pagination a {
        padding: 6px 14px;
        display: block;
    }
</style>

<div class="col-md-12">
    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount
    <div class="pagination d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))
    </div>
</div>
